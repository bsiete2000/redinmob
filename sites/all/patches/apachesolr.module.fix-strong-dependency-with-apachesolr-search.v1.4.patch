# This patch file was generated by NetBeans IDE
# It uses platform neutral UTF-8 encoding and \n newlines.
--- Index
+++ Modified In Working Tree
@@ -1409,14 +1409,53 @@
 }
 
 /**
+ * Static getter/setter for the current namespace.
+ *
+ * @param <string> $namespace
+ *    Name of the namespace to create (if doesn't exist) and set as current
+ *    If NULL send, no changes.
+ *
+ * @return
+ *    The current namespace
+ */
+function apachesolr_current_namespace($namespace = NULL) {
+  static $saved_namespaces = array();
+
+  // Creates the only one 'must exists' element
+  if(empty($saved_namespaces)){
+    array_unshift($saved_namespaces, 'apachesolr_search');
+  }
+
+  $namespace = trim($namespace);
+
+  if(!empty($namespace)){
+    if(in_array($namespace, $saved_namespaces)){
+      $to_remove = array_keys($saved_namespaces, $namespace);
+
+      foreach ($to_remove as $key) {
+        unset($saved_namespaces[$key]);
+      }
+
+      $saved_namespaces = array_values($saved_namespaces);
+    }
+
+    array_unshift($saved_namespaces, $namespace);
+  }
+
+  return reset($saved_namespaces);
+}
+
+/**
  * It is important to hold on to the Solr response object for the duration of the
  * page request so that we can use it for things like building facet blocks.
  *
  * @todo reverse the order of parameters in future branches.
  */
-function apachesolr_static_response_cache($response = NULL, $namespace = 'apachesolr_search') {
+function apachesolr_static_response_cache($response = NULL, $namespace = '') {
   static $_response = array();
 
+  $namespace = apachesolr_current_namespace($namespace);
+
   if (is_object($response)) {
     $_response[$namespace] = clone $response;
   }
@@ -1462,9 +1501,11 @@
  *
  * @todo reverse the order of parameters in future branches.
  */
-function apachesolr_current_query($query = NULL, $namespace = 'apachesolr_search') {
+function apachesolr_current_query($query = NULL, $namespace = '') {
   static $saved_query = array();
 
+  $namespace = apachesolr_current_namespace($namespace);
+  
   if (is_object($query)) {
     $saved_query[$namespace] = clone $query;
   }
